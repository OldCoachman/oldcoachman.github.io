{"version":3,"sources":["scripts/api_processing.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAMA;;;;AAGA,IAAI,KAAJ;AAEA,IAAI,qBAAJ;AAEA,IAAM,KAAK,GAAG,QAAQ,CAAC,cAAT,CAAwB,OAAxB,CAAd;AACA,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAlB;;SAEe;;;;;sEAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAE+B,KAAK,CAAC,qCAAD,CAFpC;;UAAA;YAEc,QAFd;YAAA;YAAA,OAGgD,QAAQ,CAAC,IAAT,EAHhD;;UAAA;YAGc,IAHd;YAIQ,eAAe,CAAC,IAAI,CAAC,OAAN,CAAf;YAJR;YAAA;;UAAA;YAAA;YAAA;YAMQ,OAAO,CAAC,GAAR,CAAY,8CAAZ;;UANR;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;;;AAUA,SAAS,eAAT,CAAyB,SAAzB,EAA0C;EACtC,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;EACA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,YAAK;IACnC,WAAW,CAAC,MAAM,CAAC,KAAR,CAAX;EACH,CAFD;EAIA,MAAM,CAAC,SAAP,oEAEM,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,GAAvB,CAA2B,UAAA,KAAK,EAAG;IACrC,yBAAkB,KAAlB;EACH,CAFK,EAEH,IAFG,CAEE,EAFF,CAFN;EAOA,KAAK,CAAC,MAAN,CAAa,MAAb;AACH;;SAEc;;;;;4EAAf,kBAA2B,KAA3B;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MACQ,KAAK,KAAK,oBADlB;cAAA;cAAA;YAAA;;YAAA;YAAA,OAE+B,KAAK,qCAA8B,KAA9B,aAFpC;;UAAA;YAEc,QAFd;YAAA;YAAA,OAG2B,QAAQ,CAAC,IAAT,EAH3B;;UAAA;YAGc,IAHd;YAIQ,eAAe,CAAC,IAAI,CAAC,OAAN,CAAf;;UAJR;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;;;AAQA,SAAS,eAAT,CAAyB,MAAzB,EAAyC;EACrC,IAAI,eAAe,GAAG,CAAtB;EACA,aAAa,CAAC,KAAD,CAAb;EACA,YAAY,CAAC,qBAAD,CAAZ;;EAEA,IAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;IACnB,SAAS,CAAC,SAAV,2EACmD,MAAM,CAAC,CAAD,CADzD,sFAEmD,MAAM,CAAC,CAAD,CAFzD;IAIA,eAAe,IAAI,CAAnB;;IACA,IAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;MACrB,eAAe,GAAG,CAAlB;IACH;;IACD,KAAK,GAAG,WAAW,CAAC,SAAD,EAAY,IAAZ,CAAnB,CATmB,CASkB;EACxC,CAVD,MAUO;IAAE;IACL,SAAS,CAAC,SAAV,2EACmD,MAAM,CAAC,CAAD,CADzD;EAIH;;EAED,SAAS,SAAT,GAAkB;IACd,SAAS,CAAC,kBAAV,CAA6B,WAA7B,gEAA8F,MAAM,CAAC,eAAD,CAApG;IACA,qBAAqB,GAAG,UAAU,CAAC,YAAK;MACpC,QAAQ,CAAC,aAAT,CAAuB,QAAvB,EAAkC,MAAlC;IACH,CAFiC,EAE/B,IAF+B,CAAlC;;IAIA,IAAI,eAAe,GAAG,CAAlB,IAAuB,MAAM,CAAC,MAAlC,EAA0C;MAAE;MACxC,eAAe,GAAG,CAAlB;IACH,CAFD,MAEO;MACH,eAAe;IAClB;EACJ;AACJ;;AAED,KAAK","file":"api_processing.9ba0df1c.js","sourceRoot":"..","sourcesContent":["import isUrl from \"is-url\"\r\n\r\ninterface Breeds {\r\n    [breed: string]: unknown\r\n}\r\n\r\n/**\r\n * shows time interval b/w two pictures\r\n */\r\nlet timer: number\r\n\r\nlet deleteFirstPhotoDelay: number\r\n\r\nconst breed = document.getElementById(\"breed\")!\r\nconst slideshow = document.getElementById('slideshow')!;\r\n\r\nasync function start() {\r\n    try {\r\n        const response = await fetch(\"https://dog.ceo/api/breeds/list/all\")\r\n        const data: { message: Breeds } = await response.json()\r\n        createBreedList(data.message)\r\n    } catch (e) {\r\n        console.log('There was a problem fetching the breed list.')\r\n    }\r\n}\r\n\r\nfunction createBreedList(breedList: Breeds) {\r\n    const select = document.createElement(\"select\")\r\n    select.addEventListener(\"change\", () => {\r\n        loadByBreed(select.value)\r\n    });\r\n\r\n    select.innerHTML = `\r\n        <option>Choose a dog breed</option>\r\n        ${Object.keys(breedList).map(breed => {\r\n        return `<option>${breed}</option>`\r\n    }).join('')}\r\n    `\r\n\r\n    breed.append(select)\r\n}\r\n\r\nasync function loadByBreed(breed: string) {\r\n    if (breed !== 'Choose a dog breed') {\r\n        const response = await fetch(`https://dog.ceo/api/breed/${breed}/images`) // fetch images for a concrete breed\r\n        const data = await response.json()\r\n        createSlideshow(data.message)\r\n    }\r\n}\r\n\r\nfunction createSlideshow(images: string[]) {\r\n    let currentPosition = 0\r\n    clearInterval(timer)\r\n    clearTimeout(deleteFirstPhotoDelay)\r\n\r\n    if (images.length > 1) {\r\n        slideshow.innerHTML = `\r\n        <div class=\"slide\" style=\"background-image: url('${images[0]}')\"></div>\r\n        <div class=\"slide\" style=\"background-image: url('${images[1]}')\"></div>\r\n        `\r\n        currentPosition += 2\r\n        if (images.length === 2) {\r\n            currentPosition = 0\r\n        }\r\n        timer = setInterval(nextSlide, 3000) // slides are changed every 3 sec\r\n    } else { // keep showing a single image\r\n        slideshow.innerHTML = `\r\n        <div class=\"slide\" style=\"background-image: url('${images[0]}')\"></div>\r\n        <div class=\"slide\"></div>\r\n        `\r\n    }\r\n\r\n    function nextSlide() {\r\n        slideshow.insertAdjacentHTML(\"beforeend\", `<div class=\"slide\" style=\"background-image: url('${images[currentPosition]}')\"></div>`)\r\n        deleteFirstPhotoDelay = setTimeout(() => {\r\n            document.querySelector('.slide')!.remove()\r\n        }, 1000)\r\n\r\n        if (currentPosition + 1 >= images.length) { // if we reached the last picture in a breed list\r\n            currentPosition = 0\r\n        } else {\r\n            currentPosition++\r\n        }\r\n    }\r\n}\r\n\r\nstart()"]}